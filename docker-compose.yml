version: "3.8"
services:
  api1: &api1
    image: fzanutto/rinha-backend
    hostname: api1
    environment:
      - SERVER_PORT=8000
      - DATABASE_URL=r2dbc:postgresql://postgres:5432/rinha?currentSchema=public
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=root
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    expose:
      - "8000"
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "0.75GB"

  api2:
    <<: *api1

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "0.2GB"

  postgres:
    image: postgres:latest
    command: postgres -c 'max_connections=400'
    user: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 3s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      resources:
        limits:
          cpus: "0.50"
          memory: "1.0GB"

  redis:
    image: redis
    hostname: redis
    command: ["redis-server", "--appendonly", "no", "--save ''"]
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: "0.3GB"
